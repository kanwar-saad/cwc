package com.example.testapp;

import java.util.Dictionary;

import com.example.testapp.NetLog.Facility;
import com.example.testapp.NetLog.Severity;

import android.os.AsyncTask;
import android.os.BatteryManager;
import android.os.Bundle;
import android.app.Activity;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.view.Menu;
import android.widget.*;
import android.util.Log;

public class MainActivity extends Activity {

	private static final String TAG = "MainActivity";
	private static Thread rxThread;
	
	TextView viewText;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
         
        viewText = (TextView) findViewById(R.id.HelloText);
        viewText.setText("Saad");
        
        registerReceiver(Utils.mBatInfoReceiver, new IntentFilter(Intent.ACTION_BATTERY_CHANGED));
        
        //while(Utils.isBatteryDataValid()==false);
        
        Log.v(TAG, "Reading values" );
        Dictionary<?, ?> batProp = Utils.getBatteryStatus();
        Log.v(TAG, "values read" );
        Log.v(TAG, String.valueOf(batProp.get("charge_percent")) );
	    Log.v(TAG, String.valueOf(batProp.get("charging")) );
	    Log.v(TAG, String.valueOf(batProp.get("charge_ac")) );
	    Log.v(TAG, String.valueOf(batProp.get("charge_usb")) );
	    
	    new AsyncAppInit().execute();
    }


    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }
    
    @Override
    public void onBackPressed() {
        //rxThread.interrupt();
        ConfigData.CtrlSock.close();
        //ConfigData.Log.close();
        
    }
    
    
    class AsyncAppInit extends AsyncTask<Void, Void, Void> {

        private Exception exception;

        protected Void doInBackground(Void... v) {
            Void ret = null;
            String localIP = UDPConnection.getLocalIP();
    	    //Log.d(TAG, "Local IP = " + localIP );
    	    String bcAddr = UDPConnection.getBroadcastAddr(localIP, 16);
    	    //Log.d(TAG, "Broadcast IP = " + bcAddr );
    	    	    
    	    //UDPConnection NetLog = new UDPConnection(localIP, "192.168.2.5", 0, 9206, false);    	    
    	    //NetLog.send("Hello this is a test udp packet");
    	    
    	    
    	    //Thread rxThread = new ControlReceiver();
    	    //rxThread.start();
    	    
    	    //NetLog netLog = new NetLog();
    	    //netLog.setServer("192.168.137.90", 36963);
    	    //netLog.Log("Testing Net Logging API", Facility.UNDEFINED, Severity.DEBUG, Utils.getDeviceID());
    	    
    	    // Start new control channel
    	    ConfigData.CtrlSock = new UDPConnection("", "", ConfigData.getCtrlPort(), ConfigData.getCtrlPort(), true);
    	    ConfigData.Log = new NetLog();
    	    
    	    rxThread = new ControlReceiver();
    	    rxThread.start();
    	    
            return ret;
        }
        protected void onPostExecute(Void v) {
            // TODO: check this.exception 
            // TODO: do something with the feed
        }
     }
    
   
    
}
